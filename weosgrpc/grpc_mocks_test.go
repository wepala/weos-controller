// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package weosgrpc_test

import (
	"context"
	"github.com/wepala/weos-controller"
	"google.golang.org/grpc"
	"sync"
)

// Ensure, that GrpcTestAPIMock does implement GrpcTestAPI.
// If this is not the case, regenerate this file with moq.
var _ GrpcTestAPI = &GrpcTestAPIMock{}

// GrpcTestAPIMock is a mock implementation of GrpcTestAPI.
//
// 	func TestSomethingThatUsesGrpcTestAPI(t *testing.T) {
//
// 		// make and configure a mocked GrpcTestAPI
// 		mockedGrpcTestAPI := &GrpcTestAPIMock{
// 			AddConfigFunc: func(config *weoscontroller.APIConfig) error {
// 				panic("mock out the AddConfig method")
// 			},
// 			AddPathConfigFunc: func(path string, config *weoscontroller.PathConfig) error {
// 				panic("mock out the AddPathConfig method")
// 			},
// 			ContextFunc: func() context.Context {
// 				panic("mock out the Context method")
// 			},
// 			FooBarFunc: func(c context.Context) error {
// 				panic("mock out the FooBar method")
// 			},
// 			GetStreamMiddlewareFunc: func() grpc.ServerOption {
// 				panic("mock out the GetStreamMiddleware method")
// 			},
// 			GetUnaryMiddlewareFunc: func() grpc.ServerOption {
// 				panic("mock out the GetUnaryMiddleware method")
// 			},
// 			HelloWorldFunc: func(c context.Context) error {
// 				panic("mock out the HelloWorld method")
// 			},
// 			InitializeFunc: func() error {
// 				panic("mock out the Initialize method")
// 			},
// 			SetAllMiddlewareFunc: func()  {
// 				panic("mock out the SetAllMiddleware method")
// 			},
// 			SetContextFunc: func(c context.Context)  {
// 				panic("mock out the SetContext method")
// 			},
// 		}
//
// 		// use mockedGrpcTestAPI in code that requires weoscontroller.GrpcTestAPI
// 		// and then make assertions.
//
// 	}
type GrpcTestAPIMock struct {
	// AddConfigFunc mocks the AddConfig method.
	AddConfigFunc func(config *weoscontroller.APIConfig) error

	// AddPathConfigFunc mocks the AddPathConfig method.
	AddPathConfigFunc func(path string, config *weoscontroller.PathConfig) error

	// ContextFunc mocks the Context method.
	ContextFunc func() context.Context

	// FooBarFunc mocks the FooBar method.
	FooBarFunc func(c context.Context) error

	// GetStreamMiddlewareFunc mocks the GetStreamMiddleware method.
	GetStreamMiddlewareFunc func() grpc.ServerOption

	// GetUnaryMiddlewareFunc mocks the GetUnaryMiddleware method.
	GetUnaryMiddlewareFunc func() grpc.ServerOption

	// HelloWorldFunc mocks the HelloWorld method.
	HelloWorldFunc func(c context.Context) error

	// InitializeFunc mocks the Initialize method.
	InitializeFunc func() error

	// SetAllMiddlewareFunc mocks the SetAllMiddleware method.
	SetAllMiddlewareFunc func()

	// SetContextFunc mocks the SetContext method.
	SetContextFunc func(c context.Context)

	// calls tracks calls to the methods.
	calls struct {
		// AddConfig holds details about calls to the AddConfig method.
		AddConfig []struct {
			// Config is the config argument value.
			Config *weoscontroller.APIConfig
		}
		// AddPathConfig holds details about calls to the AddPathConfig method.
		AddPathConfig []struct {
			// Path is the path argument value.
			Path string
			// Config is the config argument value.
			Config *weoscontroller.PathConfig
		}
		// Context holds details about calls to the Context method.
		Context []struct {
		}
		// FooBar holds details about calls to the FooBar method.
		FooBar []struct {
			// C is the c argument value.
			C context.Context
		}
		// GetStreamMiddleware holds details about calls to the GetStreamMiddleware method.
		GetStreamMiddleware []struct {
		}
		// GetUnaryMiddleware holds details about calls to the GetUnaryMiddleware method.
		GetUnaryMiddleware []struct {
		}
		// HelloWorld holds details about calls to the HelloWorld method.
		HelloWorld []struct {
			// C is the c argument value.
			C context.Context
		}
		// Initialize holds details about calls to the Initialize method.
		Initialize []struct {
		}
		// SetAllMiddleware holds details about calls to the SetAllMiddleware method.
		SetAllMiddleware []struct {
		}
		// SetContext holds details about calls to the SetContext method.
		SetContext []struct {
			// C is the c argument value.
			C context.Context
		}
	}
	lockAddConfig           sync.RWMutex
	lockAddPathConfig       sync.RWMutex
	lockContext             sync.RWMutex
	lockFooBar              sync.RWMutex
	lockGetStreamMiddleware sync.RWMutex
	lockGetUnaryMiddleware  sync.RWMutex
	lockHelloWorld          sync.RWMutex
	lockInitialize          sync.RWMutex
	lockSetAllMiddleware    sync.RWMutex
	lockSetContext          sync.RWMutex
}

// AddConfig calls AddConfigFunc.
func (mock *GrpcTestAPIMock) AddConfig(config *weoscontroller.APIConfig) error {
	if mock.AddConfigFunc == nil {
		panic("GrpcTestAPIMock.AddConfigFunc: method is nil but GrpcTestAPI.AddConfig was just called")
	}
	callInfo := struct {
		Config *weoscontroller.APIConfig
	}{
		Config: config,
	}
	mock.lockAddConfig.Lock()
	mock.calls.AddConfig = append(mock.calls.AddConfig, callInfo)
	mock.lockAddConfig.Unlock()
	return mock.AddConfigFunc(config)
}

// AddConfigCalls gets all the calls that were made to AddConfig.
// Check the length with:
//     len(mockedGrpcTestAPI.AddConfigCalls())
func (mock *GrpcTestAPIMock) AddConfigCalls() []struct {
	Config *weoscontroller.APIConfig
} {
	var calls []struct {
		Config *weoscontroller.APIConfig
	}
	mock.lockAddConfig.RLock()
	calls = mock.calls.AddConfig
	mock.lockAddConfig.RUnlock()
	return calls
}

// AddPathConfig calls AddPathConfigFunc.
func (mock *GrpcTestAPIMock) AddPathConfig(path string, config *weoscontroller.PathConfig) error {
	if mock.AddPathConfigFunc == nil {
		panic("GrpcTestAPIMock.AddPathConfigFunc: method is nil but GrpcTestAPI.AddPathConfig was just called")
	}
	callInfo := struct {
		Path   string
		Config *weoscontroller.PathConfig
	}{
		Path:   path,
		Config: config,
	}
	mock.lockAddPathConfig.Lock()
	mock.calls.AddPathConfig = append(mock.calls.AddPathConfig, callInfo)
	mock.lockAddPathConfig.Unlock()
	return mock.AddPathConfigFunc(path, config)
}

// AddPathConfigCalls gets all the calls that were made to AddPathConfig.
// Check the length with:
//     len(mockedGrpcTestAPI.AddPathConfigCalls())
func (mock *GrpcTestAPIMock) AddPathConfigCalls() []struct {
	Path   string
	Config *weoscontroller.PathConfig
} {
	var calls []struct {
		Path   string
		Config *weoscontroller.PathConfig
	}
	mock.lockAddPathConfig.RLock()
	calls = mock.calls.AddPathConfig
	mock.lockAddPathConfig.RUnlock()
	return calls
}

// Context calls ContextFunc.
func (mock *GrpcTestAPIMock) Context() context.Context {
	if mock.ContextFunc == nil {
		panic("GrpcTestAPIMock.ContextFunc: method is nil but GrpcTestAPI.Context was just called")
	}
	callInfo := struct {
	}{}
	mock.lockContext.Lock()
	mock.calls.Context = append(mock.calls.Context, callInfo)
	mock.lockContext.Unlock()
	return mock.ContextFunc()
}

// ContextCalls gets all the calls that were made to Context.
// Check the length with:
//     len(mockedGrpcTestAPI.ContextCalls())
func (mock *GrpcTestAPIMock) ContextCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockContext.RLock()
	calls = mock.calls.Context
	mock.lockContext.RUnlock()
	return calls
}

// FooBar calls FooBarFunc.
func (mock *GrpcTestAPIMock) FooBar(c context.Context) error {
	if mock.FooBarFunc == nil {
		panic("GrpcTestAPIMock.FooBarFunc: method is nil but GrpcTestAPI.FooBar was just called")
	}
	callInfo := struct {
		C context.Context
	}{
		C: c,
	}
	mock.lockFooBar.Lock()
	mock.calls.FooBar = append(mock.calls.FooBar, callInfo)
	mock.lockFooBar.Unlock()
	return mock.FooBarFunc(c)
}

// FooBarCalls gets all the calls that were made to FooBar.
// Check the length with:
//     len(mockedGrpcTestAPI.FooBarCalls())
func (mock *GrpcTestAPIMock) FooBarCalls() []struct {
	C context.Context
} {
	var calls []struct {
		C context.Context
	}
	mock.lockFooBar.RLock()
	calls = mock.calls.FooBar
	mock.lockFooBar.RUnlock()
	return calls
}

// GetStreamMiddleware calls GetStreamMiddlewareFunc.
func (mock *GrpcTestAPIMock) GetStreamMiddleware() grpc.ServerOption {
	if mock.GetStreamMiddlewareFunc == nil {
		panic("GrpcTestAPIMock.GetStreamMiddlewareFunc: method is nil but GrpcTestAPI.GetStreamMiddleware was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetStreamMiddleware.Lock()
	mock.calls.GetStreamMiddleware = append(mock.calls.GetStreamMiddleware, callInfo)
	mock.lockGetStreamMiddleware.Unlock()
	return mock.GetStreamMiddlewareFunc()
}

// GetStreamMiddlewareCalls gets all the calls that were made to GetStreamMiddleware.
// Check the length with:
//     len(mockedGrpcTestAPI.GetStreamMiddlewareCalls())
func (mock *GrpcTestAPIMock) GetStreamMiddlewareCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetStreamMiddleware.RLock()
	calls = mock.calls.GetStreamMiddleware
	mock.lockGetStreamMiddleware.RUnlock()
	return calls
}

// GetUnaryMiddleware calls GetUnaryMiddlewareFunc.
func (mock *GrpcTestAPIMock) GetUnaryMiddleware() grpc.ServerOption {
	if mock.GetUnaryMiddlewareFunc == nil {
		panic("GrpcTestAPIMock.GetUnaryMiddlewareFunc: method is nil but GrpcTestAPI.GetUnaryMiddleware was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetUnaryMiddleware.Lock()
	mock.calls.GetUnaryMiddleware = append(mock.calls.GetUnaryMiddleware, callInfo)
	mock.lockGetUnaryMiddleware.Unlock()
	return mock.GetUnaryMiddlewareFunc()
}

// GetUnaryMiddlewareCalls gets all the calls that were made to GetUnaryMiddleware.
// Check the length with:
//     len(mockedGrpcTestAPI.GetUnaryMiddlewareCalls())
func (mock *GrpcTestAPIMock) GetUnaryMiddlewareCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetUnaryMiddleware.RLock()
	calls = mock.calls.GetUnaryMiddleware
	mock.lockGetUnaryMiddleware.RUnlock()
	return calls
}

// HelloWorld calls HelloWorldFunc.
func (mock *GrpcTestAPIMock) HelloWorld(c context.Context) error {
	if mock.HelloWorldFunc == nil {
		panic("GrpcTestAPIMock.HelloWorldFunc: method is nil but GrpcTestAPI.HelloWorld was just called")
	}
	callInfo := struct {
		C context.Context
	}{
		C: c,
	}
	mock.lockHelloWorld.Lock()
	mock.calls.HelloWorld = append(mock.calls.HelloWorld, callInfo)
	mock.lockHelloWorld.Unlock()
	return mock.HelloWorldFunc(c)
}

// HelloWorldCalls gets all the calls that were made to HelloWorld.
// Check the length with:
//     len(mockedGrpcTestAPI.HelloWorldCalls())
func (mock *GrpcTestAPIMock) HelloWorldCalls() []struct {
	C context.Context
} {
	var calls []struct {
		C context.Context
	}
	mock.lockHelloWorld.RLock()
	calls = mock.calls.HelloWorld
	mock.lockHelloWorld.RUnlock()
	return calls
}

// Initialize calls InitializeFunc.
func (mock *GrpcTestAPIMock) Initialize() error {
	if mock.InitializeFunc == nil {
		panic("GrpcTestAPIMock.InitializeFunc: method is nil but GrpcTestAPI.Initialize was just called")
	}
	callInfo := struct {
	}{}
	mock.lockInitialize.Lock()
	mock.calls.Initialize = append(mock.calls.Initialize, callInfo)
	mock.lockInitialize.Unlock()
	return mock.InitializeFunc()
}

// InitializeCalls gets all the calls that were made to Initialize.
// Check the length with:
//     len(mockedGrpcTestAPI.InitializeCalls())
func (mock *GrpcTestAPIMock) InitializeCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockInitialize.RLock()
	calls = mock.calls.Initialize
	mock.lockInitialize.RUnlock()
	return calls
}

// SetAllMiddleware calls SetAllMiddlewareFunc.
func (mock *GrpcTestAPIMock) SetAllMiddleware() {
	if mock.SetAllMiddlewareFunc == nil {
		panic("GrpcTestAPIMock.SetAllMiddlewareFunc: method is nil but GrpcTestAPI.SetAllMiddleware was just called")
	}
	callInfo := struct {
	}{}
	mock.lockSetAllMiddleware.Lock()
	mock.calls.SetAllMiddleware = append(mock.calls.SetAllMiddleware, callInfo)
	mock.lockSetAllMiddleware.Unlock()
	mock.SetAllMiddlewareFunc()
}

// SetAllMiddlewareCalls gets all the calls that were made to SetAllMiddleware.
// Check the length with:
//     len(mockedGrpcTestAPI.SetAllMiddlewareCalls())
func (mock *GrpcTestAPIMock) SetAllMiddlewareCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockSetAllMiddleware.RLock()
	calls = mock.calls.SetAllMiddleware
	mock.lockSetAllMiddleware.RUnlock()
	return calls
}

// SetContext calls SetContextFunc.
func (mock *GrpcTestAPIMock) SetContext(c context.Context) {
	if mock.SetContextFunc == nil {
		panic("GrpcTestAPIMock.SetContextFunc: method is nil but GrpcTestAPI.SetContext was just called")
	}
	callInfo := struct {
		C context.Context
	}{
		C: c,
	}
	mock.lockSetContext.Lock()
	mock.calls.SetContext = append(mock.calls.SetContext, callInfo)
	mock.lockSetContext.Unlock()
	mock.SetContextFunc(c)
}

// SetContextCalls gets all the calls that were made to SetContext.
// Check the length with:
//     len(mockedGrpcTestAPI.SetContextCalls())
func (mock *GrpcTestAPIMock) SetContextCalls() []struct {
	C context.Context
} {
	var calls []struct {
		C context.Context
	}
	mock.lockSetContext.RLock()
	calls = mock.calls.SetContext
	mock.lockSetContext.RUnlock()
	return calls
}
