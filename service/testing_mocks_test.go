// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package service_test

import (
	"bitbucket.org/wepala/weos-controller/service"
	"sync"
)

var (
	lockServiceInterfaceMockGetConfig     sync.RWMutex
	lockServiceInterfaceMockGetPathConfig sync.RWMutex
)

// Ensure, that ServiceInterfaceMock does implement ServiceInterface.
// If this is not the case, regenerate this file with moq.
var _ service.ServiceInterface = &ServiceInterfaceMock{}

// ServiceInterfaceMock is a mock implementation of ServiceInterface.
//
//     func TestSomethingThatUsesServiceInterface(t *testing.T) {
//
//         // make and configure a mocked ServiceInterface
//         mockedServiceInterface := &ServiceInterfaceMock{
//             GetConfigFunc: func() *service.Config {
// 	               panic("mock out the GetConfig method")
//             },
//             GetPathConfigFunc: func(path string, operation string) (*service.PathConfig, error) {
// 	               panic("mock out the GetPathConfig method")
//             },
//         }
//
//         // use mockedServiceInterface in code that requires ServiceInterface
//         // and then make assertions.
//
//     }
type ServiceInterfaceMock struct {
	// GetConfigFunc mocks the GetConfig method.
	GetConfigFunc func() *service.Config

	// GetPathConfigFunc mocks the GetPathConfig method.
	GetPathConfigFunc func(path string, operation string) (*service.PathConfig, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetConfig holds details about calls to the GetConfig method.
		GetConfig []struct {
		}
		// GetPathConfig holds details about calls to the GetPathConfig method.
		GetPathConfig []struct {
			// Path is the path argument value.
			Path string
			// Operation is the operation argument value.
			Operation string
		}
	}
}

// GetConfig calls GetConfigFunc.
func (mock *ServiceInterfaceMock) GetConfig() *service.Config {
	if mock.GetConfigFunc == nil {
		panic("ServiceInterfaceMock.GetConfigFunc: method is nil but ServiceInterface.GetConfig was just called")
	}
	callInfo := struct {
	}{}
	lockServiceInterfaceMockGetConfig.Lock()
	mock.calls.GetConfig = append(mock.calls.GetConfig, callInfo)
	lockServiceInterfaceMockGetConfig.Unlock()
	return mock.GetConfigFunc()
}

// GetConfigCalls gets all the calls that were made to GetConfig.
// Check the length with:
//     len(mockedServiceInterface.GetConfigCalls())
func (mock *ServiceInterfaceMock) GetConfigCalls() []struct {
} {
	var calls []struct {
	}
	lockServiceInterfaceMockGetConfig.RLock()
	calls = mock.calls.GetConfig
	lockServiceInterfaceMockGetConfig.RUnlock()
	return calls
}

// GetPathConfig calls GetPathConfigFunc.
func (mock *ServiceInterfaceMock) GetPathConfig(path string, operation string) (*service.PathConfig, error) {
	if mock.GetPathConfigFunc == nil {
		panic("ServiceInterfaceMock.GetPathConfigFunc: method is nil but ServiceInterface.GetPathConfig was just called")
	}
	callInfo := struct {
		Path      string
		Operation string
	}{
		Path:      path,
		Operation: operation,
	}
	lockServiceInterfaceMockGetPathConfig.Lock()
	mock.calls.GetPathConfig = append(mock.calls.GetPathConfig, callInfo)
	lockServiceInterfaceMockGetPathConfig.Unlock()
	return mock.GetPathConfigFunc(path, operation)
}

// GetPathConfigCalls gets all the calls that were made to GetPathConfig.
// Check the length with:
//     len(mockedServiceInterface.GetPathConfigCalls())
func (mock *ServiceInterfaceMock) GetPathConfigCalls() []struct {
	Path      string
	Operation string
} {
	var calls []struct {
		Path      string
		Operation string
	}
	lockServiceInterfaceMockGetPathConfig.RLock()
	calls = mock.calls.GetPathConfig
	lockServiceInterfaceMockGetPathConfig.RUnlock()
	return calls
}
