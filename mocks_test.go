// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package weoscontroller_test

import (
	"github.com/wepala/weos-controller"
	"sync"
)

// Ensure, that APIInterfaceMock does implement weoscontroller.APIInterface.
// If this is not the case, regenerate this file with moq.
var _ weoscontroller.APIInterface = &APIInterfaceMock{}

// APIInterfaceMock is a mock implementation of weoscontroller.APIInterface.
//
// 	func TestSomethingThatUsesAPIInterface(t *testing.T) {
//
// 		// make and configure a mocked weoscontroller.APIInterface
// 		mockedAPIInterface := &APIInterfaceMock{
// 			AddConfigFunc: func(config *weoscontroller.APIConfig) error {
// 				panic("mock out the AddConfig method")
// 			},
// 			InitializeFunc: func() error {
// 				panic("mock out the Initialize method")
// 			},
// 		}
//
// 		// use mockedAPIInterface in code that requires weoscontroller.APIInterface
// 		// and then make assertions.
//
// 	}
type APIInterfaceMock struct {
	// AddConfigFunc mocks the AddConfig method.
	AddConfigFunc func(config *weoscontroller.APIConfig) error

	// InitializeFunc mocks the Initialize method.
	InitializeFunc func() error

	// calls tracks calls to the methods.
	calls struct {
		// AddConfig holds details about calls to the AddConfig method.
		AddConfig []struct {
			// Config is the config argument value.
			Config *weoscontroller.APIConfig
		}
		// Initialize holds details about calls to the Initialize method.
		Initialize []struct {
		}
	}
	lockAddConfig  sync.RWMutex
	lockInitialize sync.RWMutex
}

// AddConfig calls AddConfigFunc.
func (mock *APIInterfaceMock) AddConfig(config *weoscontroller.APIConfig) error {
	if mock.AddConfigFunc == nil {
		panic("APIInterfaceMock.AddConfigFunc: method is nil but APIInterface.AddConfig was just called")
	}
	callInfo := struct {
		Config *weoscontroller.APIConfig
	}{
		Config: config,
	}
	mock.lockAddConfig.Lock()
	mock.calls.AddConfig = append(mock.calls.AddConfig, callInfo)
	mock.lockAddConfig.Unlock()
	return mock.AddConfigFunc(config)
}

// AddConfigCalls gets all the calls that were made to AddConfig.
// Check the length with:
//     len(mockedAPIInterface.AddConfigCalls())
func (mock *APIInterfaceMock) AddConfigCalls() []struct {
	Config *weoscontroller.APIConfig
} {
	var calls []struct {
		Config *weoscontroller.APIConfig
	}
	mock.lockAddConfig.RLock()
	calls = mock.calls.AddConfig
	mock.lockAddConfig.RUnlock()
	return calls
}

// Initialize calls InitializeFunc.
func (mock *APIInterfaceMock) Initialize() error {
	if mock.InitializeFunc == nil {
		panic("APIInterfaceMock.InitializeFunc: method is nil but APIInterface.Initialize was just called")
	}
	callInfo := struct {
	}{}
	mock.lockInitialize.Lock()
	mock.calls.Initialize = append(mock.calls.Initialize, callInfo)
	mock.lockInitialize.Unlock()
	return mock.InitializeFunc()
}

// InitializeCalls gets all the calls that were made to Initialize.
// Check the length with:
//     len(mockedAPIInterface.InitializeCalls())
func (mock *APIInterfaceMock) InitializeCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockInitialize.RLock()
	calls = mock.calls.Initialize
	mock.lockInitialize.RUnlock()
	return calls
}
